@import 'form/variables';
@import "../util/scss/clockwise";
@import "../util/scss/include";
@import "../util/scss/add-rules";

$cx-button-font-family: $cx-default-box-font-family !default;
$cx-button-font-size: $cx-default-box-font-size !default;
$cx-button-padding: $cx-default-box-padding 2 * $cx-default-box-padding !default;
$cx-button-border-width: $cx-default-box-border-width !default;
$cx-button-background-color: #eee !default;
$cx-button-border-color: #ccc !default;

$cx-button-styles: (
   default: (
      background-color: $cx-button-background-color,
      box-shadow: inset 0 -2px rgba(128, 128, 128, 0.1),
      border-color: $cx-button-border-color,
      border-style: solid,
      user-select: none,
      font-family: $cx-button-font-family,
      font-size: $cx-default-box-font-size,
      line-height: $cx-default-box-font-size,
      border-width: $cx-button-border-width,
      padding: $cx-button-padding,
   ),
   hover: (
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15)
   ),
   focus: (
      outline: none,
      box-shadow: 0 0 1px 1px rgba(77, 144, 254, 0.8)
   ),
   disabled: (
      color: gray,
      box-shadow: none
   ),
   active: (
      top: 1px,
      outline: none,
      box-shadow: none
   )
);

$cx-button-mods: (
   primary: (
      default: (
         background: #1f99f8,
         border-color: #1E88E5,
         color: white
      ),
      disabled: (
         background: transparentize(#1f99f8, 0.5),
         border-color: transparentize(#1E88E5, 0.9),
         color: transparentize(white, 0.4),
      )
   ),
   danger: (
      default: (
         background: #d32f2f,
         border-color: #c62828,
         color: white
      ),
      disabled: (
         background: transparentize(#1f99f8, 0.4),
         border-color: transparentize(#1E88E5, 0.9),
         color: transparentize(white, 0.5),
      )
   )
) !default;


@mixin cx-button(
   $name: 'button',
   $styles: $cx-button-styles,
   $mods: $cx-button-mods,
   $besm: $cx-besm
) {
   $block: map-get($besm, block);
   $element: map-get($besm, element);
   $state: map-get($besm, state);
   $mod: map-get($besm, mod);

   .#{$block}#{$name} {
      position: relative;
      box-sizing: border-box;
      display: inline-block;
      cursor: pointer;
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;

      @include cx-add-state-rules($styles, 'default');

      &::-moz-focus-inner {
         border: 0;
         padding: 0;
         margin: -1px;
      }

      &:not([disabled]) {
         &:hover {
            @include cx-add-state-rules($styles, 'hover');
         }

         &:focus {
            @include cx-add-state-rules($styles, 'focus');
         }

         &:active {
            @include cx-add-state-rules($styles, 'active');
         }
      }

      &[disabled], &.#{$state}-disabled {
         @include cx-add-state-rules($styles, 'disabled');
      }

      @each $modname, $config in $mods {
         &.#{$mod}#{$modname} {
            @each $rule, $value in map-get($config, default) {
               #{$rule}: $value;
            }

            &[disabled], &.#{$state}disabled {
               @each $rule, $value in map-get($config, disabled) {
                  #{$rule}: $value;
               }
            }

            &:hover {
               @each $rule, $value in map-get($config, hover) {
                  #{$rule}: $value;
               }
            }

            &:focus {
               @each $rule, $value in map-get($config, focus) {
                  #{$rule}: $value;
               }
            }

            &:active {
               @each $rule, $value in map-get($config, active) {
                  #{$rule}: $value;
               }
            }
         }
      }
   }
}

@if (cx-include('ui/Button')) {
   @include cx-button;
}