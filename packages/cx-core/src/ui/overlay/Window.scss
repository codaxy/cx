@import "variables";
@import "../icons/index";
@import "Overlay";

@import "variables";
@import '../../util/scss/include';
@import '../../util/scss/add-rules';

$cx-window-state-style-map: (
   default: (
      box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.29),
      background: transparent,
      border-radius: $cx-default-border-radius
   ),
   resizable: (
      box-shadow: 0 0 20px 1px rgba(0, 0, 0, 0.29)
   )
) !default;


$cx-window-header-state-style-map: (
   default: (
      background: rgba(246, 246, 246, 0.9),
      padding: 10px 15px,
      font-size: 16px,
      border-top-left-radius: $cx-default-border-radius,
      border-top-right-radius: $cx-default-border-radius
   ),
   active: (

   )
) !default;

$cx-window-footer-state-style-map: (
   default: (
      background: rgba(246, 246, 246, 0.9),
      padding: 10px 20px,
      border-bottom-left-radius: $cx-default-border-radius,
      border-bottom-right-radius: $cx-default-border-radius
   )
) !default;

$cx-window-body-state-style-map: (
   default: (
      background: white
   )
) !default;

@mixin cx-window(
   $name: 'window',
   $state-style-map: $cx-window-state-style-map,
   $header-state-style-map: $cx-window-header-state-style-map,
   $body-state-style-map: $cx-window-body-state-style-map,
   $footer-state-style-map: $cx-window-footer-state-style-map,
   $besm: $cx-besm
) {
   $block: map-get($besm, block);
   $element: map-get($besm, element);
   $state: map-get($besm, state);
   $mod: map-get($besm, mod);

   .#{$block}#{$name} {
      @extend %cxb-overlay;
      box-sizing: border-box;
      z-index: 1000;

      @include cx-add-state-rules($state-style-map, default);

      &.#{$state}resizable {
         &.#{$state}active {
            @include cx-add-state-rules($state-style-map, resizable);
         }
      }

      &.#{$mod}alert {
         min-width: 300px;
      }
   }

   .#{$element}#{$name}-header {
      position: relative; //put on top of modal backdrop
      box-sizing: border-box;
      display: flex;
      align-items: center;

      @include cx-add-state-rules($header-state-style-map, default);

      .#{$state}draggable & {
         cursor: pointer;
      }

      .#{$state}active & {
         @include cx-add-state-rules($header-state-style-map, active);
      }
   }

   .#{$element}#{$name}-footer {
      position: relative;
      box-sizing: border-box;

      @include cx-add-state-rules($footer-state-style-map, default);

      &:after {
         clear: both;
         visibility: hidden;
         display: block;
         font-size: 0;
         content: " ";
         height: 0;
      }

      .#{$mod}alert & {
         text-align: center;
      }
   }

   .#{$element}#{$name}-body {
      overflow: auto;
      position: relative; //put on top of modal backdrop
      box-sizing: border-box;

      @include cx-add-state-rules($body-state-style-map, default);

      .#{$mod}alert & {
         padding: 40px;
         text-align: center;
      }
   }

   .#{$element}#{$name}-close {
      @extend %cx-icon-close;
      position: absolute;
      right: 5px;
      top: calc(50% - 15px);
      background-position: center;
      background-size: 18px 18px;
      border: none;
      width: 30px;
      float: right;
      height: 30px;
      display: block;
      border-radius: 50%;
      background-color: transparent;
      -webkit-appearance: none;
      -moz-appearance: none;
      -ms-appearance: none;
      appearance: none;

      &:hover {
         @each $rule, $value in map-get($cx-list-item, hover) {
            #{$rule}: $value;
         }
      }

      &:focus {
         @each $rule, $value in map-get($cx-list-item, selected-focus) {
            #{$rule}: $value;
         }
      }

      &:active {
         @each $rule, $value in map-get($cx-list-item, active) {
            #{$rule}: $value;
         }
      }
   }

   .#{$element}#{$name}-modal-backdrop {
      @extend %cxe-overlay-modal-backdrop;
   }

   .#{$element}#{$name}-shadow {
      @extend %cxe-overlay-shadow;
   }
}

@if (cx-include('cx/widgets/Window')) {
   @include cx-window();
}

