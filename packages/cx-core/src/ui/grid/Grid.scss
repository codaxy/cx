@import "../variables";
@import '../../util/scss/include';

$cx-grid-header-background-color: #f8f8f8;
$cx-grid-border-color: lightgray;

@mixin cx-grid(
   $name: 'grid',
   $block: $cx-block,
   $element: $cx-element,
   $state: $cx-state,
   $mod: $cx-mod
) {

   .cxb-grid {
      box-sizing: border-box;
      position: relative;

      table {
         border-spacing: 0;
         border-collapse: collapse;
         width: 100%;
         position: relative;
      }

      .cxs-aligned-left {
         text-align: left;
      }

      .cxs-aligned-right {
         text-align: right;
      }

      .cxs-aligned-center {
         text-align: center;
      }

      &.cxs-scrollable {

         border: 1px solid $cx-grid-border-color;
         overflow: hidden;

         th {
            border-top: none;
            border-left: none;
         }

         th:last-child {
            border-right: none;
         }

         & > .cxe-grid-scroll-area {
            overflow-y: auto;
            position: relative;
            height: 100%;
         }

         & > .cxe-grid-fixed-header {
            overflow: hidden;

            & > table {
               width: auto;
               table-layout: fixed;
            }

            .cxe-grid-col-header {
               background: $cx-grid-header-background-color;
            }
         }
      }

      &.cxm-responsive {
         display: block;
         width: 100%;

         & > .cxe-grid-scroll-area {
            overflow-x: auto;
         }
      }
   }

   .cxe-grid-empty-text {
      color: #aaa;
   }

   .cxe-grid-col-header {
      text-align: left;
      padding: 5px;
      box-sizing: border-box;

      .cxs-sortable & {
         border: 1px solid $cx-grid-border-color;
         background: $cx-grid-header-background-color;
         position: relative;
      }

      &.cxs-sortable {

         cursor: pointer;

         &.cxs-sorted-asc, &.cxs-sorted-desc {

         }

         &:hover, .cxe-grid-fixed-header &:hover {
            background: lighten($cx-grid-header-background-color, 3%);
         }
      }

      &.cxs-sortable::before {
         content: '\2193';
         position: absolute;
         visibility: hidden;
         top: 3px;
      }

      &.cxs-sorted-asc::before {
         content: '\2193';
         visibility: visible;
      }

      &.cxs-sorted-desc::before {
         content: '\2191';
         visibility: visible;
      }

      &.cxs-sortable:not(.cxs-aligned-right) {
         padding-right: 15px;

         &::before {
            right: 5px;
         }
      }

      &.cxs-sortable.cxs-aligned-center {
         padding-left: 15px;
      }

      &.cxs-sortable.cxs-aligned-right {
         padding-left: 15px;

         &::before {
            left: 5px;
         }
      }
   }

   .cxe-grid-data {
      td {
         padding: 0;
         border-top: 1px solid $cx-grid-border-color;;
      }

      td.cxs-pad {
         padding: 5px;
      }

      &.cxs-cursor {
         @each $rule, $value in map-get($cx-list-item, hover) {
            #{$rule}: $value;
         }
      }

      &.cxs-selected {
         @each $rule, $value in map-get($cx-list-item, selected) {
            #{$rule}: $value;
         }
      }

      .cxs-focused &, :focus & {

         &.cxs-cursor {
            @each $rule, $value in map-get($cx-list-item, hover-focus) {
               #{$rule}: $value;
            }
         }

         &.cxs-selected {
            @each $rule, $value in map-get($cx-list-item, selected-focus) {
               #{$rule}: $value;
            }
         }

         &:active {
            @each $rule, $value in map-get($cx-list-item, active) {
               #{$rule}: $value;
            }
         }
      }
   }

   .cxe-grid-group-caption {
      font-weight: bold;
      font-size: 115%;

      td {
         padding: 5px;
      }

      &:not(:first-child) {
         td {
            padding-top: 15px;
         }
      }

      &.cxs-level-2 {
         font-size: 130%;

         td {
            border-bottom: 1px solid grey;
         }
      }

      &.cxs-level-3 {
         font-size: 145%;

         td {
            border-bottom: 1px solid grey;
         }
      }

      &.cxs-level-4 {
         font-size: 160%;

         td {
            border-bottom: 1px solid grey;
         }
      }
   }

   .cxe-grid-group-footer {
      font-weight: bold;

      td {
         border-top: 1px solid $cx-grid-border-color;
         padding: 5px;
      }

      &.cxs-level-2 {
         font-weight: bold;
         font-size: 110%;

         td {
            border-top: 1px solid grey;
         }
      }

      &.cxs-level-3 {
         font-weight: bold;
         font-size: 120%;

         td {
            border-top: 1px solid grey;
         }
      }

      &.cxs-level-4 {
         font-weight: bold;
         font-size: 130%;

         td {
            border-top: 1px solid grey;
         }
      }
   }

   &.cxm-bordered {

      th, td {
         border: 1px solid $cx-grid-border-color;;
      }

      th {
         border: 1px solid $cx-grid-border-color;;
         background: $cx-grid-header-background-color;
      }

      .cxe-grid-group-footer td, & .cxe-grid-group-caption td {
         border: none;
      }
   }

   .cxe-grid-fixed-header {
      position: absolute;
      left: 0;
      top: 0;
      right: 0;
   }

   .cxb-grid.cxs-selectable {

      .cxe-grid-scroll-area {
         @each $rule, $value in map-get($cx-list, default) {
            #{$rule}: $value;
         }

         &:focus {
            @each $rule, $value in map-get($cx-list, focus) {
               #{$rule}: $value;
            }
         }
      }

      .cxe-grid-data {

         cursor: pointer;
      }
   }
}

@if (cx-include('cx/widgets/Grid')) {
   @include cx-grid();
}