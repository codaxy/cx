@import "variables";
@import "../icons/index";
@import '../../util/scss/clockwise';

@mixin cxb-field(
   $box: true,
   $width: $cx-input-width,
   $line-height: $cx-input-line-height,
   $padding: $cx-input-padding,
   $border-width: $cx-input-border-width
)
{
   position: relative;
   display: inline-block;
   box-sizing: border-box;

   @if $box {
      width: $width;
      height: calc(#{$line-height} + #{cx-top($padding) + cx-bottom($padding)} + #{cx-top($border-width) + cx-bottom($border-width)});
   }

   &.cxs-view-mode {
      line-height: $line-height;
      padding: $padding;
      border: $border-width solid transparent;
   }
}

@mixin cxe-field-input(
   $default: $cx-input-default,
   $hover: $cx-input-hover,
   $focus: $cx-input-focus,
   $error: $cx-input-error,
   $error-focus: $cx-input-error-focus,
   $disabled: $cx-input-disabled,
   $placeholder: $cx-input-placeholder,
   $box: true,
   $line-height: $cx-input-line-height,
   $padding: $cx-input-padding,
   $border-width: $cx-input-border-width,
   $margin: 0
) {
   box-sizing: border-box;

   line-height: $line-height;
   padding: $padding;
   border-width: $border-width;

   @if $box {
      width: 100%;
      height: 100%;
   }

   margin: $margin;

   @each $rule, $value in $default {
      #{$rule}: $value;
   }

   &:hover {
      @each $rule, $value in $hover {
         #{$rule}: $value;
      }
   }

   &:focus {
      @each $rule, $value in $focus {
         #{$rule}: $value;
      }
   }

   @if $box {
      &:disabled {
         @each $rule, $value in $disabled {
            #{$rule}: $value;
         }
      }
   }
   @else {
      .cxs-disabled > & {
         @each $rule, $value in $disabled {
            #{$rule}: $value;
         }
      }
   }

   .cxs-error.cxs-visited > & {
      @each $rule, $value in $error {
         #{$rule}: $value;
      }

      &:focus {
         @each $rule, $value in $error-focus {
            #{$rule}: $value;
         }
      }
   }

   @if $box {
      &::-webkit-input-placeholder, &::-moz-placeholder, &:-ms-input-placeholder {
         @each $rule, $value in $placeholder {
            #{$rule}: $value;
         }
      }

      &::-ms-clear {
         width: 0;
         height: 0;
      }
   }
}

@mixin cxe-field-clear(
   $size: $cx-input-clear-size
) {
   position: absolute;
   font: $cx-input-clear-font;
   right: $cx-input-padding;
   top: 50%;
   margin-top: -$size / 2;
   height: $size;
   width: $size;
   line-height: $size;
   color: $cx-input-clear-color;
   border-radius: $size / 2;
   text-align: center;

   &:hover {
      background-color: $cx-input-clear-background-hover;
   }

   i, svg {
      display: block;
      position: absolute;
      left: calc(50% - #{$cx-input-icon-size / 2});
      top: calc(50% - #{$cx-input-icon-size / 2});
      height: $cx-input-icon-size;
      width: $cx-input-icon-size;
      line-height: $cx-input-icon-size;
   }
}

@mixin cxe-field-icon() {
   position: absolute;
   box-sizing: border-box;
   right: $cx-input-padding;
   top: 50%;
   margin-top: -$cx-input-button-size / 2;
   height: $cx-input-button-size;
   width: $cx-input-button-size;
   line-height: $cx-input-button-size;
   opacity: 0.7;
   text-align: center;
   cursor: pointer;
   color: $cx-input-icon-color;

   &:hover {
      opacity: 1;
   }

   i, svg {
      display: block;
      position: absolute;
      left: calc(50% - #{$cx-input-icon-size / 2});
      top: calc(50% - #{$cx-input-icon-size / 2});
      height: $cx-input-icon-size;
      width: $cx-input-icon-size;
      line-height: $cx-input-icon-size;
   }
}

@mixin cxe-field-empty-text() {
   color: #aaa;
}

