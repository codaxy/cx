@import "Field";
@import "../Button";

@mixin cx-lookupfield(
   $name: 'lookupfield',
   $state-style-map: $cx-input-state-style-map,
   $placeholder: $cx-input-placeholder,
   $empty-text: $cx-empty-text,
   $clear-state-style-map: $cx-clear-state-style-map,
   $icon-size: $cx-default-input-icon-size,
   $width: $cx-default-input-width,
   $besm: $cx-besm
) {
   $block: map-get($besm, block);
   $element: map-get($besm, element);
   $state: map-get($besm, state);

   .#{$block}#{$name} {
      @include cxb-field($besm, $state-style-map,
         $width: $width,
         $input: false
      );

      min-width: $cx-default-input-width;
      cursor: pointer
   }

   $padding: cx-get-state-rule($state-style-map, default, padding);

   .#{$element}#{$name}-input {
      @include cxe-field-input(
         $besm,
         $state-style-map,
         $placeholder: $placeholder,
         $overrides: (
            padding: cx-top($padding) cx-calc(cx-right($padding), $cx-default-clear-size, -$cx-default-input-tag-spacing) cx-bottom($padding) cx-left($padding)
         )
      );

      .#{$state}icon > & {
         @extend %cx-icon-dropdown-arrow;
         background-position: right $cx-default-input-padding center;
      }
   }

   .#{$block}#{$name}.#{$state}multiple .#{$element}#{$name}-input {
      padding: 0 cx-calc(cx-right($padding), $cx-default-clear-size, $cx-default-input-tag-spacing) $cx-default-input-tag-spacing 0;
   }

   .#{$element}#{$name}-tag {
      background: $cx-default-button-background-color;
      display: inline-block;
      position: relative;
      margin: $cx-default-input-tag-spacing 0 0 $cx-default-input-tag-spacing;
      box-sizing: border-box;
      padding: cx-calc($cx-default-input-padding, -$cx-default-input-tag-spacing);
      padding-right: $cx-default-clear-size + 2px;
   }

   .#{$element}#{$name}-placeholder {

      color: $cx-default-input-placeholder-color;

      .#{$block}#{$name}.#{$state}multiple & {
         display: inline-block;
         margin: $cx-default-input-tag-spacing 0 0 $cx-default-input-tag-spacing;
         box-sizing: border-box;
         padding: cx-calc($cx-default-input-padding, -$cx-default-input-tag-spacing);
      }
   }

   .#{$element}#{$name}-tag-value {
      padding: 0 $cx-default-input-tag-spacing;
      display: inline-block;
   }

   .#{$element}#{$name}-tag-clear {
      @include cxe-field-button($besm, $clear-state-style-map);
      right: 0;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
   }

   .#{$element}#{$name}-lookup-options {
      padding: 0;
      margin: 0;
      min-width: 100%;
      width: 100%;

      &:focus {
         @each $rule, $value in map-get($cx-list, focus) {
            #{$rule}: $value;
         }
      }

      & > li {
         list-style: none;
         padding: 0.5em 1em;
         margin: 0;
         cursor: pointer;

         &.cursor {
            @each $rule, $value in map-get($cx-list-item, hover-focus) {
               #{$rule}: $value;
            }
         }

         &.selected {
            @each $rule, $value in map-get($cx-list-item, selected-focus) {
               #{$rule}: $value;
            }
         }
      }
   }

   .#{$element}#{$name}-query {
      @include cxe-field-input($besm, $state-style-map, $placeholder: $placeholder);
      margin: 5px;
      height: auto;
      width: calc(100% - 10px);
   }

   .#{$element}#{$name}-dropdown {
      display: flex;
      flex-direction: column;
      height: 100%;

      &:focus {
         outline: none;
      }
   }

   .#{$element}#{$name}-message {
      font-size: smaller;
      padding: 10px;
      color: gray;
      font-style: italic;

      &.#{$state}error {
         color: #9e2f2d;
      }
   }

   .#{$element}#{$name}-scroll-container {
      overflow: auto;
      flex-grow: 1;
      flex-shrink: 0;
      flex-basis: auto;
   }

   .#{$element}#{$name}-clear {
      @include cxe-field-button($besm, $clear-state-style-map);
   }

   .#{$element}#{$name}-icon {
      @include cxe-field-button-icon($besm, $icon-size);
   }

   .#{$element}#{$name}-empty-text {
      @include cxe-field-empty-text($empty-text);
   }
}

@if (cx-include('cx/widgets/LookupField')) {
   @include cx-lookupfield();
}