
@mixin cx-flexbox(
   $name: 'flexbox',
   $besm: $cx-besm
) {
   $block: map-get($besm, block);
   $element: map-get($besm, element);
   $state: map-get($besm, state);
   $mod: map-get($besm, mod);

   .#{$block}#{$name} {
      display: block;
      box-sizing: border-box;

      @each $pad, $size in $cx-pad-size
      {
         &.#{$state}#{$pad}-pad {
            padding: $size;
         }

         &.#{$state}#{$pad}-hpad {
            padding-left: $size;
            padding-right: $size;
         }

         &.#{$state}#{$pad}-vpad {
            padding-top: $size;
            padding-bottom: $size;
         }
      }
   }

   .#{$element}#{$name}-flexbox {

      &.#{$state}column {
         flex-direction: column;
      }

      &.#{$state}row {
         flex-direction: row;
      }

      @each $pad, $size in $cx-pad-size
      {
         &.#{$state}#{$pad}-spacing {
            margin: -$size / 2;

            & > * {
               margin: $size / 2;
            }
         }

         &.#{$state}#{$pad}-hspacing {
            margin-left: -$size / 2;
            margin-right: -$size / 2;

            & > * {
               margin-left: $size / 2;
               margin-right: $size / 2;
            }
         }

         &.#{$state}#{$pad}-vspacing {
            margin-top: -$size / 2;
            margin-bottom: -$size / 2;

            & > * {
               margin-top: $size / 2;
               margin-bottom: $size / 2;
            }
         }
      }

      &.#{$state}align-center {
         align-items: center;
      }

      &.#{$state}wrap {
         flex-wrap: wrap;
      }

      &.#{$state}justify-center {
         justify-content: center;
      }

      &.#{$state}justify-start {
         justify-content: flex-start;
      }

      &.#{$state}justify-end {
         justify-content: flex-end;
      }

      &.#{$state}target-any {
         display: flex;
      }

      &.#{$state}target-phone {
         @media screen and (min-width: $cx-screen-size-small) {
            display: flex;
         }
      }

      &.#{$state}target-tablet {
         @media screen and (min-width: $cx-screen-size-medium) {
            display: flex;
         }
      }

      &.#{$state}target-desktop {
         @media screen and (min-width: $cx-screen-size-large) {
            display: flex;
         }
      }
   }
}

@if (cx-include('cx/widgets/FlexBox')) {
   @include cx-flexbox();
}