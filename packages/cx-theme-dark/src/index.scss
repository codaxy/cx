@import '~cx/src/index';

$block: map-get($cx-besm, block);
$element: map-get($cx-besm, element);
$state: map-get($cx-besm, state);
$mod: map-get($cx-besm, mod);

@if (cx-included('cx/widgets/Grid')) {

   .#{$block}grid.#{$state}scrollable.#{$state}border {
      border-color: $cx-default-grid-header-border-color;
   }

   .#{$element}grid-data {
      &:nth-child(odd) {
         background-color: lighten($cx-default-background-color, 2);

         &.#{$state}selected {
            @include cx-add-state-rules($cx-list-item, selected);
            &:hover {
               @include cx-add-state-rules($cx-list-item, selected-cursor);
            }
         }
         &.#{$state}cursor {
            @include cx-add-state-rules($cx-list-item, hover);
         }

         .#{$state}focused &, :focus & {
            &.#{$state}cursor {
               @include cx-add-state-rules($cx-list-item, cursor);
            }
            &.#{$state}selected {
               @include cx-add-state-rules($cx-list-item, selected-cursor);
            }
         }
      }
   }

   .#{$element}grid-header .#{$element}textfield-input {
      background-color: $cx-default-background-color;
   }
}

//Scrollbar Style

@if ($cx-include-global-rules) {
   @media screen and (min-width: 700px) {
      ::-webkit-scrollbar {
         width: 10px;
         height: 10px;
         background-color: $cx-default-background-color-dark;
      }

      ::-webkit-scrollbar-thumb {
         -webkit-border-radius: 8px;

         &:vertical {
            background-color: lighten($cx-default-background-color-light, 6);

            &:hover {
               background-color: lighten($cx-default-background-color-light, 8);
            }
         }

         &:horizontal {
            background-color: lighten($cx-default-background-color-light, 8);

            &:hover {
               background-color: lighten($cx-default-background-color-light, 10);
            }
         }
      }

      ::-webkit-scrollbar-corner {
         background-color: darken($cx-default-background-color-light, 2);
         border-left: 1px solid $cx-default-border-color;
         border-top: 1px solid $cx-default-border-color;
         -webkit-box-shadow: darken($cx-default-background-color, 3) 0 1px inset;
      }
   }
}

//override for chrome mobile default press effect
.#{$block}button, .#{$block}tab, .#{$block}menu {
   -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
}

//close button in toasts with mod set
@function cx-map-deep-get($map, $keys...){
   @each $key in $keys {
      $map: map-get($map, $key)
   }
   @return $map
};

.#{$block}toast {
   $mods: primary warning error success;
   @each $i in $mods {
      &.#{$mod}#{$i} {
         .#{$block}button.#{$state}icon {
            &:hover {
               background-color: darken(cx-map-deep-get($cx-toast-mods, #{$i}, default, background-color), 10);
               border-color: transparent;
            }
         }
      } 
   }
}